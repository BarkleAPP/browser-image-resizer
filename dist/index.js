function E(e,t){let i=t.width/t.height,r=Math.min(t.width,e.maxWidth,i*e.maxHeight);return e.maxSize&&e.maxSize>0&&e.maxSize<t.width*t.height/1e3&&(r=Math.min(r,Math.floor(e.maxSize*1e3/t.height))),e.scaleRatio&&(r=Math.min(r,Math.floor(e.scaleRatio*t.width))),e.debug&&(console.log("browser-image-resizer: original image size = "+t.width+" px (width) X "+t.height+" px (height)"),console.log("browser-image-resizer: scaled image size = "+r+" px (width) X "+Math.floor(r/i)+" px (height)")),r<=0&&(r=1,console.warn("browser-image-resizer: image size is too small")),r}function j(e,t){var o,h,d;let i=t.outputWidth/e.width,r=new OffscreenCanvas(e.width*i,e.height*i),m=(o=e==null?void 0:e.getContext("2d"))==null?void 0:o.getImageData(0,0,e.width,e.height),n=(h=r==null?void 0:r.getContext("2d"))==null?void 0:h.createImageData(r.width,r.height);if(!m||!n)throw Error("Canvas is empty (scaleCanvasWithAlgorithm). You should run this script after the document is ready.");return A(m,n,i),(d=r==null?void 0:r.getContext("2d"))==null||d.putImageData(n,0,0),r}function q(e){var i;let t=new OffscreenCanvas(e.width/2,e.height/2);return(i=t==null?void 0:t.getContext("2d"))==null||i.drawImage(e,0,0,t.width,t.height),t}function A(e,t,i){function r(T,c,H,C,s,y){let O=1-s,R=1-y;return T*O*R+c*s*R+H*O*y+C*s*y}let m,n,o,h,d,g,p,I,l,u,a,f,b,w,x,z,S,M,B;for(m=0;m<t.height;++m)for(o=m/i,h=Math.floor(o),d=Math.ceil(o)>e.height-1?e.height-1:Math.ceil(o),n=0;n<t.width;++n)g=n/i,p=Math.floor(g),I=Math.ceil(g)>e.width-1?e.width-1:Math.ceil(g),l=(n+t.width*m)*4,u=(p+e.width*h)*4,a=(I+e.width*h)*4,f=(p+e.width*d)*4,b=(I+e.width*d)*4,w=g-p,x=o-h,z=r(e.data[u],e.data[a],e.data[f],e.data[b],w,x),t.data[l]=z,S=r(e.data[u+1],e.data[a+1],e.data[f+1],e.data[b+1],w,x),t.data[l+1]=S,M=r(e.data[u+2],e.data[a+2],e.data[f+2],e.data[b+2],w,x),t.data[l+2]=M,B=r(e.data[u+3],e.data[a+3],e.data[f+3],e.data[b+3],w,x),t.data[l+3]=B}async function W({img:e,config:t}){var o;t.debug&&console.log("Scale: Started",e);let i;if(e instanceof OffscreenCanvas)i=e;else{let h=await createImageBitmap(e);i=new OffscreenCanvas(h.width,h.height),(o=i.getContext("2d"))==null||o.drawImage(h,0,0)}if(!(i==null?void 0:i.getContext("2d")))throw Error("Canvas Context is empty.");let m=E(t,i);for(t.debug&&console.log(`Scale: Max width is ${m}`);i.width>=2*m;)t.debug&&console.log(`Scale: Scaling canvas by half from ${i.width}`),i=q(i);return i.width>m&&(t.debug&&console.log(`Scale: Scaling canvas from ${i.width} to ${m}`),i=j(i,Object.assign(t,{outputWidth:m}))),await i.convertToBlob({type:t.mimeType,quality:t.quality})}var L={quality:.5,maxWidth:800,maxHeight:600,debug:!1,mimeType:"image/jpeg"};async function F(e,t){let i=Object.assign({},L,t);return W({img:e,config:i})}export{F as readAndCompressImage};
